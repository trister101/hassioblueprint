blueprint:
  name: night motion lights
  description: >
     Turn lights to Max then off and then return to original state
  domain: automation
#  source_url: 
  input:
    activated:
        name: Activated
        description: "Toggle to activate or deactivate flashing lights."
        selector:
            entity:
    target_lights:
        name: Lights
        description: "To flashing lights"
        selector:
          target:
            entity:
              domain: light
    delay:
      name: (OPTIONAL) First Delay
      description: "First Delay"
      default: 1000
      selector:
        number:
          min: 0
          max: 20000
          unit_of_measurement: milliseconds
          
mode: restart
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input activated
    to: 'on'

variables:
  activated: !input activated
  delay: !input delay
  target_lights: !input target_lights

condition: []

action:
  - service: scene.create
    data:
        scene_id: all_lights_snapshot
        snapshot_entities: >
               {% set lights = states.light
                 | map(attribute='entity_id') | join(',') %}
                 {{lights}}
  - service: light.turn_on
    target: !input target_lights
  - delay: 
      milliseconds: "{{ delay }}"
  - service: light.toggle
      target: !input target_lights
  - service: scene.turn_on
    data:
      entity_id: scene.all_lights_snapshot
